package ui;

import application.Application;
import com.toedter.calendar.JTextFieldDateEditor;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.*;
import javax.swing.border.LineBorder;

import model.Flight;
import model.Gender;
import model.Passenger;
import model.Reservation;
import service.BookingService;

import static javax.swing.JOptionPane.*;

public class PassengerInformation extends javax.swing.JFrame {

    private static final String NAME_PATTERN = "^[\\p{L} ']+$";
    private static final String NATION_CODE_PATTERN = "[0-9]{10}";
    private static final String PHONE_NUMBER_PATTERN = "09\\d{9}$";

    private final BookingService bookingService;
    private final InfoGenerator infoGenerator;

    private JFrame previousFrame;
    private Flight outboundFlight;
    private Flight returnFlight;
    private int numberOfTickets;

    public PassengerInformation(BookingService bookingService) {
        this.bookingService = bookingService;
        this.infoGenerator = new InfoGenerator();

        initComponents();
        initOtherComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        nationCodeLabel = new javax.swing.JLabel();
        nationCodeTextField = new javax.swing.JTextField();
        birthdayLabel = new javax.swing.JLabel();
        birthdayChooser = new com.toedter.calendar.JDateChooser();
        genderLabel = new javax.swing.JLabel();
        genderSelector = new javax.swing.JComboBox<>();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        firstNameWarningLabel = new javax.swing.JLabel();
        lastNameWarningLabel = new javax.swing.JLabel();
        nationCodeWarningLabel = new javax.swing.JLabel();
        phoneNumberExampleLabel = new javax.swing.JLabel();
        phoneNumberWarningLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Travel Agency");
        setResizable(false);

        bookButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bookButton.setText("Book");
        bookButton.setFocusable(false);
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backButton.setText("Back");
        backButton.setFocusable(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Passenger Information");
        titleLabel.setFocusable(false);

        firstNameLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        firstNameLabel.setText("First Name");
        firstNameLabel.setFocusable(false);

        firstNameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lastNameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lastNameLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lastNameLabel.setText("Last Name");
        lastNameLabel.setFocusable(false);

        nationCodeLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        nationCodeLabel.setText("Nation Code");
        nationCodeLabel.setFocusable(false);

        nationCodeTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        birthdayLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        birthdayLabel.setText("Birthday");
        birthdayLabel.setFocusable(false);

        birthdayChooser.setFocusable(false);
        birthdayChooser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        birthdayChooser.setMaxSelectableDate(new Date());

        genderLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        genderLabel.setText("Gender");
        genderLabel.setFocusable(false);

        genderSelector.setBackground(Color.WHITE);
        genderSelector.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        genderSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Male", "Female"}));
        genderSelector.setSelectedIndex(-1);
        genderSelector.setFocusable(false);

        phoneNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        phoneNumberLabel.setText("Phone Number");
        phoneNumberLabel.setFocusable(false);

        phoneNumberTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        addressLabel.setText("Address");
        addressLabel.setFocusable(false);

        addressTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        firstNameWarningLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        firstNameWarningLabel.setForeground(this.getBackground());
        firstNameWarningLabel.setText("First Name must have only letters.");

        lastNameWarningLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lastNameWarningLabel.setForeground(this.getBackground());
        lastNameWarningLabel.setText("Last Name must have only letters.");
        lastNameWarningLabel.setFocusable(false);

        nationCodeWarningLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nationCodeWarningLabel.setForeground(this.getBackground());
        nationCodeWarningLabel.setText("Nation Code have to be a 10 digits number.");
        nationCodeWarningLabel.setFocusable(false);

        phoneNumberExampleLabel.setText("Example: 09123456789");
        phoneNumberExampleLabel.setFocusable(false);

        phoneNumberWarningLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        phoneNumberWarningLabel.setForeground(this.getBackground());
        phoneNumberWarningLabel.setText("Invalid Phone Number.");
        phoneNumberWarningLabel.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lastNameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(lastNameLabel)
                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                .addGap(100, 100, 100)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(birthdayChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(genderSelector, 0, 160, Short.MAX_VALUE)
                                                        .addComponent(birthdayLabel)
                                                        .addComponent(genderLabel))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(phoneNumberLabel)
                                                                .addGap(167, 167, 167))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(100, 100, 100)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(phoneNumberExampleLabel)
                                                                        .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(phoneNumberWarningLabel))
                                                                .addGap(134, 134, 134))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(firstNameLabel)
                                                .addContainerGap())
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lastNameWarningLabel)
                                                        .addComponent(firstNameWarningLabel))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nationCodeWarningLabel)
                                        .addComponent(addressLabel)
                                        .addComponent(nationCodeLabel)
                                        .addComponent(nationCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(titleLabel)
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(firstNameLabel)
                                        .addComponent(birthdayLabel)
                                        .addComponent(phoneNumberLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(birthdayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(phoneNumberExampleLabel)
                                        .addComponent(firstNameWarningLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lastNameLabel)
                                                        .addComponent(genderLabel)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(phoneNumberWarningLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(genderSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lastNameWarningLabel)
                                .addGap(10, 10, 10)
                                .addComponent(nationCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nationCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nationCodeWarningLabel)
                                .addGap(10, 10, 10)
                                .addComponent(addressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initOtherComponents() {
        birthdayChooserEditor = (JTextFieldDateEditor) birthdayChooser.getDateEditor();

        birthdayChooserEditor.setEditable(false);
        birthdayChooserEditor.setFocusable(false);
        birthdayChooserEditor.setBorder(new LineBorder(Color.BLACK));
        birthdayChooserEditor.setBackground(Color.WHITE);
        birthdayChooserEditor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                birthdayChooserEditorMouseReleased(evt);
            }
        });

        this.setLocationRelativeTo(null);
    }

    public PassengerInformation setPreviousFrame(JFrame previousFrame) {
        this.previousFrame = previousFrame;
        return this;
    }

    public PassengerInformation setOutboundFlight(Flight outboundFlight) {
        this.outboundFlight = outboundFlight;
        return this;
    }

    public PassengerInformation setReturnFlight(Flight returnFlight) {
        this.returnFlight = returnFlight;
        return this;
    }

    public PassengerInformation setNumberOfTickets(int numberOfTickets) {
        this.numberOfTickets = numberOfTickets;
        return this;
    }

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        redWrongFields();
        if (isAllFieldsCorrect() && confirm() == 1) {
            try {
                bookingService.book(getReservation());
                showMessage("The reservation successfully submitted.", "Result", INFORMATION_MESSAGE);
            } catch (Exception e) {
                String message = "Something went wrong! Please try again later\n\nError Message:\n" + e.getMessage();
                showMessage(message, "Error", ERROR_MESSAGE);
            }
            Application.restart();
        }
    }//GEN-LAST:event_bookButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        previousFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed


    private void birthdayChooserEditorMouseReleased(MouseEvent evt) {//GEN-FIRST:event_birthdayChooserEditorMouseReleased
        birthdayChooserEditor.setForeground(Color.BLACK);
    }//GEN-LAST:event_birthdayChooserEditorMouseReleased

    private void showMessage(String message, String title, int type) {
        showMessageDialog(this, message, title, type);
    }

    private int confirm() {
        String[] options = {"Cancel", "Submit"};
        return showOptionDialog(
                this,
                infoGenerator.generateReservationInfo(getReservation()) + "Do you want to submit?",
                "Confirmation",
                YES_NO_CANCEL_OPTION,
                QUESTION_MESSAGE,
                null,
                options,
                options[1]
        );
    }

    private void redWrongFields() {
        if (isFirstNameWrong()) {
            firstNameLabel.setForeground(Color.RED);
            firstNameWarningLabel.setForeground(Color.RED);
        } else if (firstNameLabel.getForeground() == Color.RED) {
            firstNameLabel.setForeground(Color.BLACK);
            firstNameWarningLabel.setForeground(this.getBackground());
        }

        if (isLastNameWrong()) {
            lastNameLabel.setForeground(Color.RED);
            lastNameWarningLabel.setForeground(Color.RED);
        } else if (lastNameLabel.getForeground() == Color.RED) {
            lastNameLabel.setForeground(Color.BLACK);
            lastNameWarningLabel.setForeground(this.getBackground());
        }

        if (isNationCodeWrong()) {
            nationCodeLabel.setForeground(Color.RED);
            nationCodeWarningLabel.setForeground(Color.RED);
        } else if (nationCodeLabel.getForeground() == Color.RED) {
            nationCodeLabel.setForeground(Color.BLACK);
            nationCodeWarningLabel.setForeground(this.getBackground());
        }

        if (isBirthdayWrong()) {
            birthdayLabel.setForeground(Color.RED);
        } else if (birthdayLabel.getForeground() == Color.RED) {
            birthdayLabel.setForeground(Color.BLACK);
        }

        if (isGenderWrong()) {
            genderLabel.setForeground(Color.RED);
        } else if (genderLabel.getForeground() == Color.RED) {
            genderLabel.setForeground(Color.BLACK);
        }

        if (isPhoneNumberWrong()) {
            phoneNumberLabel.setForeground(Color.RED);
            phoneNumberWarningLabel.setForeground(Color.RED);
        } else if (phoneNumberLabel.getForeground() == Color.RED) {
            phoneNumberLabel.setForeground(Color.BLACK);
            phoneNumberWarningLabel.setForeground(this.getBackground());
        }
    }

    private boolean isAllFieldsCorrect() {
        return !(isFirstNameWrong()
                || isLastNameWrong()
                || isNationCodeWrong()
                || isBirthdayWrong()
                || isGenderWrong()
                || isPhoneNumberWrong());
    }

    private boolean isFirstNameWrong() {
        return !firstNameTextField.getText().strip().matches(NAME_PATTERN);
    }

    private boolean isLastNameWrong() {
        return !lastNameTextField.getText().strip().matches(NAME_PATTERN);
    }

    private boolean isNationCodeWrong() {
        return !nationCodeTextField.getText().strip().matches(NATION_CODE_PATTERN);
    }

    private boolean isBirthdayWrong() {
        return birthdayChooser.getDate() == null;
    }

    private boolean isGenderWrong() {
        return genderSelector.getSelectedIndex() == -1;
    }

    private boolean isPhoneNumberWrong() {
        return !phoneNumberTextField.getText().strip().matches(PHONE_NUMBER_PATTERN);
    }

    private Reservation getReservation() {
        return new Reservation(outboundFlight, returnFlight, getPassengerInfo(), numberOfTickets);
    }

    private Passenger getPassengerInfo() {
        String nationCode = nationCodeTextField.getText().strip();
        String firstName = firstNameTextField.getText().strip();
        String lastName = lastNameTextField.getText().strip();
        LocalDate birthday = birthdayChooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Gender gender = genderSelector.getSelectedIndex() == 0 ? Gender.MALE : Gender.FEMALE;
        String phoneNumber = phoneNumberTextField.getText().strip();
        String address = addressTextField.getText().strip();

        return new Passenger(nationCode, firstName, lastName, gender, birthday, phoneNumber, address);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton backButton;
    private com.toedter.calendar.JDateChooser birthdayChooser;
    private javax.swing.JLabel birthdayLabel;
    private javax.swing.JButton bookButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel firstNameWarningLabel;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JComboBox<String> genderSelector;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel lastNameWarningLabel;
    private javax.swing.JLabel nationCodeLabel;
    private javax.swing.JTextField nationCodeTextField;
    private javax.swing.JLabel nationCodeWarningLabel;
    private javax.swing.JLabel phoneNumberExampleLabel;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JLabel phoneNumberWarningLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
    private JTextFieldDateEditor birthdayChooserEditor;
}